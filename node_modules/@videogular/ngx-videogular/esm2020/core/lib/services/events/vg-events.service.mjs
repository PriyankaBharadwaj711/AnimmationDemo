import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class VgEvents {
}
VgEvents.VG_ABORT = 'abort';
VgEvents.VG_CAN_PLAY = 'canplay';
VgEvents.VG_CAN_PLAY_THROUGH = 'canplaythrough';
VgEvents.VG_DURATION_CHANGE = 'durationchange';
VgEvents.VG_EMPTIED = 'emptied';
VgEvents.VG_ENCRYPTED = 'encrypted';
VgEvents.VG_ENDED = 'ended';
VgEvents.VG_ERROR = 'error';
VgEvents.VG_LOADED_DATA = 'loadeddata';
VgEvents.VG_LOADED_METADATA = 'loadedmetadata';
VgEvents.VG_LOAD_START = 'loadstart';
VgEvents.VG_PAUSE = 'pause';
VgEvents.VG_PLAY = 'play';
VgEvents.VG_PLAYING = 'playing';
VgEvents.VG_PROGRESS = 'progress';
VgEvents.VG_RATE_CHANGE = 'ratechange';
VgEvents.VG_SEEK = 'seek';
VgEvents.VG_SEEKED = 'seeked';
VgEvents.VG_SEEKING = 'seeking';
VgEvents.VG_STALLED = 'stalled';
VgEvents.VG_SUSPEND = 'suspend';
VgEvents.VG_TIME_UPDATE = 'timeupdate';
VgEvents.VG_VOLUME_CHANGE = 'volumechange';
VgEvents.VG_WAITING = 'waiting';
VgEvents.VG_LOAD = 'load';
VgEvents.VG_ENTER = 'enter';
VgEvents.VG_EXIT = 'exit';
VgEvents.VG_START_ADS = 'startads';
VgEvents.VG_END_ADS = 'endads';
/** @nocollapse */ /** @nocollapse */ VgEvents.ɵfac = function VgEvents_Factory(t) { return new (t || VgEvents)(); };
/** @nocollapse */ /** @nocollapse */ VgEvents.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: VgEvents, factory: VgEvents.ɵfac, providedIn: 'root' });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(VgEvents, [{
        type: Injectable,
        args: [{
                providedIn: 'root',
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctZXZlbnRzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL25neC12aWRlb2d1bGFyL2NvcmUvc3JjL2xpYi9zZXJ2aWNlcy9ldmVudHMvdmctZXZlbnRzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFLM0MsTUFBTSxPQUFPLFFBQVE7O0FBQ1osaUJBQVEsR0FBRyxPQUFPLENBQUM7QUFDbkIsb0JBQVcsR0FBRyxTQUFTLENBQUM7QUFDeEIsNEJBQW1CLEdBQUcsZ0JBQWdCLENBQUM7QUFDdkMsMkJBQWtCLEdBQUcsZ0JBQWdCLENBQUM7QUFDdEMsbUJBQVUsR0FBRyxTQUFTLENBQUM7QUFDdkIscUJBQVksR0FBRyxXQUFXLENBQUM7QUFDM0IsaUJBQVEsR0FBRyxPQUFPLENBQUM7QUFDbkIsaUJBQVEsR0FBRyxPQUFPLENBQUM7QUFDbkIsdUJBQWMsR0FBRyxZQUFZLENBQUM7QUFDOUIsMkJBQWtCLEdBQUcsZ0JBQWdCLENBQUM7QUFDdEMsc0JBQWEsR0FBRyxXQUFXLENBQUM7QUFDNUIsaUJBQVEsR0FBRyxPQUFPLENBQUM7QUFDbkIsZ0JBQU8sR0FBRyxNQUFNLENBQUM7QUFDakIsbUJBQVUsR0FBRyxTQUFTLENBQUM7QUFDdkIsb0JBQVcsR0FBRyxVQUFVLENBQUM7QUFDekIsdUJBQWMsR0FBRyxZQUFZLENBQUM7QUFDOUIsZ0JBQU8sR0FBRyxNQUFNLENBQUM7QUFDakIsa0JBQVMsR0FBRyxRQUFRLENBQUM7QUFDckIsbUJBQVUsR0FBRyxTQUFTLENBQUM7QUFDdkIsbUJBQVUsR0FBRyxTQUFTLENBQUM7QUFDdkIsbUJBQVUsR0FBRyxTQUFTLENBQUM7QUFDdkIsdUJBQWMsR0FBRyxZQUFZLENBQUM7QUFDOUIseUJBQWdCLEdBQUcsY0FBYyxDQUFDO0FBQ2xDLG1CQUFVLEdBQUcsU0FBUyxDQUFDO0FBRXZCLGdCQUFPLEdBQUcsTUFBTSxDQUFDO0FBQ2pCLGlCQUFRLEdBQUcsT0FBTyxDQUFDO0FBQ25CLGdCQUFPLEdBQUcsTUFBTSxDQUFDO0FBRWpCLHFCQUFZLEdBQUcsVUFBVSxDQUFDO0FBQzFCLG1CQUFVLEdBQUcsUUFBUSxDQUFDO3NHQS9CbEIsUUFBUTtnSEFBUixRQUFRLFdBQVIsUUFBUSxtQkFGUCxNQUFNO3VGQUVQLFFBQVE7Y0FIcEIsVUFBVTtlQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgVmdFdmVudHMge1xuICBzdGF0aWMgVkdfQUJPUlQgPSAnYWJvcnQnO1xuICBzdGF0aWMgVkdfQ0FOX1BMQVkgPSAnY2FucGxheSc7XG4gIHN0YXRpYyBWR19DQU5fUExBWV9USFJPVUdIID0gJ2NhbnBsYXl0aHJvdWdoJztcbiAgc3RhdGljIFZHX0RVUkFUSU9OX0NIQU5HRSA9ICdkdXJhdGlvbmNoYW5nZSc7XG4gIHN0YXRpYyBWR19FTVBUSUVEID0gJ2VtcHRpZWQnO1xuICBzdGF0aWMgVkdfRU5DUllQVEVEID0gJ2VuY3J5cHRlZCc7XG4gIHN0YXRpYyBWR19FTkRFRCA9ICdlbmRlZCc7XG4gIHN0YXRpYyBWR19FUlJPUiA9ICdlcnJvcic7XG4gIHN0YXRpYyBWR19MT0FERURfREFUQSA9ICdsb2FkZWRkYXRhJztcbiAgc3RhdGljIFZHX0xPQURFRF9NRVRBREFUQSA9ICdsb2FkZWRtZXRhZGF0YSc7XG4gIHN0YXRpYyBWR19MT0FEX1NUQVJUID0gJ2xvYWRzdGFydCc7XG4gIHN0YXRpYyBWR19QQVVTRSA9ICdwYXVzZSc7XG4gIHN0YXRpYyBWR19QTEFZID0gJ3BsYXknO1xuICBzdGF0aWMgVkdfUExBWUlORyA9ICdwbGF5aW5nJztcbiAgc3RhdGljIFZHX1BST0dSRVNTID0gJ3Byb2dyZXNzJztcbiAgc3RhdGljIFZHX1JBVEVfQ0hBTkdFID0gJ3JhdGVjaGFuZ2UnO1xuICBzdGF0aWMgVkdfU0VFSyA9ICdzZWVrJztcbiAgc3RhdGljIFZHX1NFRUtFRCA9ICdzZWVrZWQnO1xuICBzdGF0aWMgVkdfU0VFS0lORyA9ICdzZWVraW5nJztcbiAgc3RhdGljIFZHX1NUQUxMRUQgPSAnc3RhbGxlZCc7XG4gIHN0YXRpYyBWR19TVVNQRU5EID0gJ3N1c3BlbmQnO1xuICBzdGF0aWMgVkdfVElNRV9VUERBVEUgPSAndGltZXVwZGF0ZSc7XG4gIHN0YXRpYyBWR19WT0xVTUVfQ0hBTkdFID0gJ3ZvbHVtZWNoYW5nZSc7XG4gIHN0YXRpYyBWR19XQUlUSU5HID0gJ3dhaXRpbmcnO1xuXG4gIHN0YXRpYyBWR19MT0FEID0gJ2xvYWQnO1xuICBzdGF0aWMgVkdfRU5URVIgPSAnZW50ZXInO1xuICBzdGF0aWMgVkdfRVhJVCA9ICdleGl0JztcblxuICBzdGF0aWMgVkdfU1RBUlRfQURTID0gJ3N0YXJ0YWRzJztcbiAgc3RhdGljIFZHX0VORF9BRFMgPSAnZW5kYWRzJztcbn1cbiJdfQ==