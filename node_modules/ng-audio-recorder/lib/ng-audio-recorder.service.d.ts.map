{"version":3,"file":"ng-audio-recorder.service.d.ts","sources":["ng-audio-recorder.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nexport declare class NgAudioRecorderService {\n    private chunks;\n    protected recorderEnded: EventEmitter<any>;\n    recorderError: EventEmitter<ErrorCase>;\n    private _recorderState;\n    constructor();\n    private recorder;\n    private static guc;\n    getUserContent(): Promise<MediaStream>;\n    startRecording(): void;\n    pause(): void;\n    resume(): void;\n    stopRecording(outputFormat: OutputFormat): Promise<unknown>;\n    getRecorderState(): RecorderState;\n    private addListeners;\n    private appendToChunks;\n    private recordingStopped;\n    private clear;\n}\nexport declare enum OutputFormat {\n    WEBM_BLOB_URL = 0,\n    WEBM_BLOB = 1\n}\nexport declare enum ErrorCase {\n    USER_CONSENT_FAILED = 0,\n    RECORDER_TIMEOUT = 1,\n    ALREADY_RECORDING = 2\n}\nexport declare enum RecorderState {\n    INITIALIZING = 0,\n    INITIALIZED = 1,\n    RECORDING = 2,\n    PAUSED = 3,\n    STOPPING = 4,\n    STOPPED = 5\n}\n"]}