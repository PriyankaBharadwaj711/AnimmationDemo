{"ast":null,"code":"import _asyncToGenerator from \"/Users/priyanka/Desktop/ODU_Projects/anim/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OutputFormat } from 'ng-audio-recorder';\nlet LastQuestionComponent = class LastQuestionComponent {\n  constructor(dialog, data, fb, audioRecorderService) {\n    this.dialog = dialog;\n    this.data = data;\n    this.fb = fb;\n    this.audioRecorderService = audioRecorderService;\n    this.audioRecorderService.recorderError.subscribe(recorderErrorCase => {});\n  }\n\n  ngOnInit() {}\n\n  closeDialog() {\n    this.dialog.close({\n      saved: false\n    });\n  }\n\n  startRecording() {\n    this.audioRecorderService.startRecording();\n  }\n\n  stopRecording() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const recordingOutput = yield _this.audioRecorderService.stopRecording(OutputFormat.WEBM_BLOB);\n      let newBlob = new Blob([recordingOutput], {\n        type: 'audio/mpeg-3'\n      });\n      console.log(newBlob);\n\n      _this.audioRecorderService.stopRecording(OutputFormat.WEBM_BLOB).then(output => {\n        console.log(\"recording stopped\", recordingOutput); // do post output steps\n      }).catch(errrorCase => {\n        // Handle Error\n        console.log(\"error in recording\");\n      });\n    })();\n  }\n\n};\nLastQuestionComponent = __decorate([Component({\n  selector: 'app-last-question',\n  templateUrl: './last-question.component.html',\n  styleUrls: ['./last-question.component.css']\n}), __param(1, Inject(MAT_DIALOG_DATA))], LastQuestionComponent);\nexport { LastQuestionComponent };","map":{"version":3,"sources":["/Users/priyanka/Desktop/ODU_Projects/anim/src/app/last-question/last-question.component.ts"],"names":["__decorate","__param","Component","Inject","MAT_DIALOG_DATA","OutputFormat","LastQuestionComponent","constructor","dialog","data","fb","audioRecorderService","recorderError","subscribe","recorderErrorCase","ngOnInit","closeDialog","close","saved","startRecording","stopRecording","recordingOutput","WEBM_BLOB","newBlob","Blob","type","console","log","then","output","catch","errrorCase","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,eAAlC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,IAAIC,qBAAqB,GAAG,MAAMA,qBAAN,CAA4B;AACpDC,EAAAA,WAAW,CAACC,MAAD,EAASC,IAAT,EAAeC,EAAf,EAAmBC,oBAAnB,EAAyC;AAChD,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,oBAAL,GAA4BA,oBAA5B;AACA,SAAKA,oBAAL,CAA0BC,aAA1B,CAAwCC,SAAxC,CAAkDC,iBAAiB,IAAI,CAAG,CAA1E;AACH;;AACDC,EAAAA,QAAQ,GAAG,CACV;;AACDC,EAAAA,WAAW,GAAG;AACV,SAAKR,MAAL,CAAYS,KAAZ,CAAkB;AACdC,MAAAA,KAAK,EAAE;AADO,KAAlB;AAGH;;AACDC,EAAAA,cAAc,GAAG;AACb,SAAKR,oBAAL,CAA0BQ,cAA1B;AACH;;AACKC,EAAAA,aAAa,GAAG;AAAA;;AAAA;AAClB,YAAMC,eAAe,SAAS,KAAI,CAACV,oBAAL,CAA0BS,aAA1B,CAAwCf,YAAY,CAACiB,SAArD,CAA9B;AACA,UAAIC,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACH,eAAD,CAAT,EAA4B;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAA5B,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AACA,MAAA,KAAI,CAACZ,oBAAL,CAA0BS,aAA1B,CAAwCf,YAAY,CAACiB,SAArD,EAAgEM,IAAhE,CAAsEC,MAAD,IAAY;AAC7EH,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCN,eAAjC,EAD6E,CAE7E;AACH,OAHD,EAGGS,KAHH,CAGSC,UAAU,IAAI;AACnB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,OAND;AAJkB;AAWrB;;AA7BmD,CAAxD;AA+BArB,qBAAqB,GAAGN,UAAU,CAAC,CAC/BE,SAAS,CAAC;AACN8B,EAAAA,QAAQ,EAAE,mBADJ;AAENC,EAAAA,WAAW,EAAE,gCAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,+BAAD;AAHL,CAAD,CADsB,EAM/BjC,OAAO,CAAC,CAAD,EAAIE,MAAM,CAACC,eAAD,CAAV,CANwB,CAAD,EAO/BE,qBAP+B,CAAlC;AAQA,SAASA,qBAAT","sourcesContent":["import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OutputFormat } from 'ng-audio-recorder';\nlet LastQuestionComponent = class LastQuestionComponent {\n    constructor(dialog, data, fb, audioRecorderService) {\n        this.dialog = dialog;\n        this.data = data;\n        this.fb = fb;\n        this.audioRecorderService = audioRecorderService;\n        this.audioRecorderService.recorderError.subscribe(recorderErrorCase => { });\n    }\n    ngOnInit() {\n    }\n    closeDialog() {\n        this.dialog.close({\n            saved: false\n        });\n    }\n    startRecording() {\n        this.audioRecorderService.startRecording();\n    }\n    async stopRecording() {\n        const recordingOutput = await this.audioRecorderService.stopRecording(OutputFormat.WEBM_BLOB);\n        let newBlob = new Blob([recordingOutput], { type: 'audio/mpeg-3' });\n        console.log(newBlob);\n        this.audioRecorderService.stopRecording(OutputFormat.WEBM_BLOB).then((output) => {\n            console.log(\"recording stopped\", recordingOutput);\n            // do post output steps\n        }).catch(errrorCase => {\n            // Handle Error\n            console.log(\"error in recording\");\n        });\n    }\n};\nLastQuestionComponent = __decorate([\n    Component({\n        selector: 'app-last-question',\n        templateUrl: './last-question.component.html',\n        styleUrls: ['./last-question.component.css']\n    }),\n    __param(1, Inject(MAT_DIALOG_DATA))\n], LastQuestionComponent);\nexport { LastQuestionComponent };\n"]},"metadata":{},"sourceType":"module"}