{"version":3,"file":"ng-audio-recorder.js","sources":["ng://ng-audio-recorder/lib/ng-audio-recorder.service.ts","ng://ng-audio-recorder/lib/ng-audio-recorder.module.ts","ng://ng-audio-recorder/public-api.ts","ng://ng-audio-recorder/ng-audio-recorder.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\ndeclare var MediaRecorder: any;\n\n@Injectable()\nexport class NgAudioRecorderService {\n\n  private chunks: Array<any> = [];\n  protected recorderEnded = new EventEmitter();\n  public recorderError = new EventEmitter<ErrorCase>();\n  // tslint:disable-next-line\n  private _recorderState = RecorderState.INITIALIZING;\n\n  constructor() {\n  }\n\n  private recorder: any;\n\n\n  private static guc() {\n    return navigator.mediaDevices.getUserMedia({audio: true});\n  }\n\n\n  getUserContent() {\n    return NgAudioRecorderService.guc();\n  }\n\n  startRecording() {\n    if (this._recorderState === RecorderState.RECORDING) {\n      this.recorderError.emit(ErrorCase.ALREADY_RECORDING);\n    }\n    if (this._recorderState === RecorderState.PAUSED) {\n      this.resume();\n      return;\n    }\n    this._recorderState = RecorderState.INITIALIZING;\n    NgAudioRecorderService.guc().then((mediaStream) => {\n      this.recorder = new MediaRecorder(mediaStream);\n      this._recorderState = RecorderState.INITIALIZED;\n      this.addListeners();\n      this.recorder.start();\n      this._recorderState = RecorderState.RECORDING;\n    });\n  }\n\n  pause() {\n    if (this._recorderState === RecorderState.RECORDING) {\n      this.recorder.pause();\n      this._recorderState = RecorderState.PAUSED;\n    }\n  }\n\n  resume() {\n    if (this._recorderState === RecorderState.PAUSED) {\n      this._recorderState = RecorderState.RECORDING;\n      this.recorder.resume();\n    }\n  }\n\n  stopRecording(outputFormat: OutputFormat) {\n    this._recorderState = RecorderState.STOPPING;\n    return new Promise((resolve, reject) => {\n      this.recorderEnded.subscribe((blob) => {\n        this._recorderState = RecorderState.STOPPED;\n        if (outputFormat === OutputFormat.WEBM_BLOB) {\n          resolve(blob);\n        }\n        if (outputFormat === OutputFormat.WEBM_BLOB_URL) {\n          const audioURL = URL.createObjectURL(blob);\n          resolve(audioURL);\n        }\n      }, _ => {\n        this.recorderError.emit(ErrorCase.RECORDER_TIMEOUT);\n        reject(ErrorCase.RECORDER_TIMEOUT);\n      });\n      this.recorder.stop();\n    }).catch(() => {\n      this.recorderError.emit(ErrorCase.USER_CONSENT_FAILED);\n    });\n  }\n\n  getRecorderState() {\n    return this._recorderState;\n  }\n\n  private addListeners() {\n    this.recorder.ondataavailable = this.appendToChunks;\n    this.recorder.onstop = this.recordingStopped;\n  }\n\n  private appendToChunks = (event: any) => {\n    this.chunks.push(event.data);\n  };\n  private recordingStopped = (event: any) => {\n    const blob = new Blob(this.chunks, {type: 'audio/webm'});\n    this.chunks = [];\n    this.recorderEnded.emit(blob);\n    this.clear();\n  };\n\n  private clear() {\n    this.recorder = null;\n    this.chunks = [];\n  }\n}\n\n\nexport enum OutputFormat {\n  WEBM_BLOB_URL,\n  WEBM_BLOB,\n}\n\nexport enum ErrorCase {\n  USER_CONSENT_FAILED,\n  RECORDER_TIMEOUT,\n  ALREADY_RECORDING\n}\n\nexport enum RecorderState {\n  INITIALIZING,\n  INITIALIZED,\n  RECORDING,\n  PAUSED,\n  STOPPING,\n  STOPPED\n}\n","import { NgModule } from '@angular/core';\nimport { NgAudioRecorderService } from './ng-audio-recorder.service';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: [],\n  providers: [\n    NgAudioRecorderService\n  ]\n})\nexport class NgAudioRecorderModule { }\n","/*\n * Public API Surface of ng-audio-recorder\n */\n\nexport * from './lib/ng-audio-recorder.service';\nexport * from './lib/ng-audio-recorder.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}